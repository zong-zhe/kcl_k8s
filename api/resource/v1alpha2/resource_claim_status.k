"""
This is the resource_claim_status module in k8s.api.resource.v1alpha2 package.
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""


schema ResourceClaimStatus:
    """
    ResourceClaimStatus tracks whether the resource has been allocated and what the resulting attributes are.

    Attributes
    ----------
    allocation : AllocationResult, default is Undefined, optional
        Allocation is set by the resource driver once a resource or set of resources has been allocated successfully. If this is not specified, the resources have not been allocated yet.
    deallocationRequested : bool, default is Undefined, optional
        DeallocationRequested indicates that a ResourceClaim is to be deallocated.

        The driver then must deallocate this claim and reset the field together with clearing the Allocation field.

        While DeallocationRequested is set, no new consumers may be added to ReservedFor.
    driverName : str, default is Undefined, optional
        DriverName is a copy of the driver name from the ResourceClass at the time when allocation started.
    reservedFor : [ResourceClaimConsumerReference], default is Undefined, optional
        ReservedFor indicates which entities are currently allowed to use the claim. A Pod which references a ResourceClaim which is not reserved for that Pod will not be started.

        There can be at most 32 such reservations. This may get increased in the future, but not reduced.
    """


    allocation?: AllocationResult

    deallocationRequested?: bool

    driverName?: str

    reservedFor?: [ResourceClaimConsumerReference]



"""
This is the metric_status module in k8s.api.autoscaling.v2 package.
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""


schema MetricStatus:
    """
    MetricStatus describes the last-read state of a single metric.

    Attributes
    ----------
    containerResource : ContainerResourceMetricStatus, default is Undefined, optional
        container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
    external : ExternalMetricStatus, default is Undefined, optional
        external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
    object : ObjectMetricStatus, default is Undefined, optional
        object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).
    pods : PodsMetricStatus, default is Undefined, optional
        pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.
    resource : ResourceMetricStatus, default is Undefined, optional
        resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
    $type : str, default is Undefined, required
        type is the type of metric source.  It will be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each corresponds to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled
    """


    containerResource?: ContainerResourceMetricStatus

    external?: ExternalMetricStatus

    object?: ObjectMetricStatus

    pods?: PodsMetricStatus

    resource?: ResourceMetricStatus

    $type: str



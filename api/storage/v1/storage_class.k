"""
This is the storage_class module in k8s.api.storage.v1 package.
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import api.core.v1
import apimachinery.pkg.apis.meta.v1 as metaV1


schema StorageClass:
    """
    StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.

    StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.

    Attributes
    ----------
    allowVolumeExpansion : bool, default is Undefined, optional
        allowVolumeExpansion shows whether the storage class allow volume expand.
    allowedTopologies : [v1.TopologySelectorTerm], default is Undefined, optional
        allowedTopologies restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.
    apiVersion : str, default is "storage.k8s.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "StorageClass", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : metaV1.ObjectMeta, default is Undefined, optional
        Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    mountOptions : [str], default is Undefined, optional
        mountOptions controls the mountOptions for dynamically provisioned PersistentVolumes of this storage class. e.g. ["ro", "soft"]. Not validated - mount of the PVs will simply fail if one is invalid.
    parameters : {str:str}, default is Undefined, optional
        parameters holds the parameters for the provisioner that should create volumes of this storage class.
    provisioner : str, default is Undefined, required
        provisioner indicates the type of the provisioner.
    reclaimPolicy : str, default is Undefined, optional
        reclaimPolicy controls the reclaimPolicy for dynamically provisioned PersistentVolumes of this storage class. Defaults to Delete.
    volumeBindingMode : str, default is Undefined, optional
        volumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.
    """


    allowVolumeExpansion?: bool

    allowedTopologies?: [v1.TopologySelectorTerm]

    apiVersion: "storage.k8s.io/v1" = "storage.k8s.io/v1"

    kind: "StorageClass" = "StorageClass"

    metadata?: metaV1.ObjectMeta

    mountOptions?: [str]

    parameters?: {str:str}

    provisioner: str

    reclaimPolicy?: str

    volumeBindingMode?: str


